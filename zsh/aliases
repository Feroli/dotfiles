alias sudo='sudo '
# Finder
alias oa='open -a'
alias o='open . &'
alias of='open -a Firefox'
alias os='open -a safari'
alias google-chrome='open ~/Applications/"Google Chrome.app"'
alias og='google-chrome' # browser must be opened first
alias ogi='og --args --incognito' # browser must be opened first

function gs () {
    web_search "google" $1
}

alias cg='open -a "Google Chrome.app"' # if browser is closed
alias cgi='open -a "Google Chrome.app" --args --incognito' # if browser is closed

# Navigation
alias ..='cd ..'
alias ...='cd .. && cd ..'
alias cdd='cd -'
alias cdbz='cd ~/bin/dotfiles/zsh'
alias cds='cd ~/sites'
alias cdr='pwd | pbcopy'
alias syscon='cd /Library/Preferences/SystemConfiguration/'

function mvpdl() {
    mv ~/Desktop/$1 ~/notes/kcl/Year2/PDL/$2
}


# CONFIG
alias zshconfig="atom ~/bin/dotfiles/zsh/"
alias ohmyzsh="atom ~/.oh-my-zsh"

# UTILITY
alias cat='bat'
alias preview="fzf --preview 'bat --color \"always\" {}'"
# add support for ctrl+o to open selected file in VS Code
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(vim {})+abort'"
alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"
alias help='tldr'
alias sz='source ~/.zshrc'
alias reload='source ~/bin/dotfiles/zsh/aliases'
alias aa='vim ~/bin/dotfiles/zsh/aliases'
alias ae='vim ~/bin/dotfiles/zsh/env'
alias ai='vim ~/bin/dotfiles/zsh/init'
alias cl='clear'
alias trash='rm -rf ~/.Trash/*' # cleans up the bin
alias imgcat='zsh ~/bin/dotfiles/imgcat' # prints an image to the console
alias cpem='ditto ~/.emacs.d ~/dotFile/dotfiles/.emacs.d'
alias cpspace='ditto ~/spacemacs/ ~/dotFile/dotfiles/spacemacs/'
alias cpdot='ditto ~/bin/dotfiles/  ~/dotFile/dotfiles'
alias cpv="rsync -poghb --backup-dir=/tmp/rsync -e /dev/null --progress --" #Show progress while file is copying
alias hideiles='defaults write com.apple.finder AppleShowAllFiles NO' #Hides hidden files
alias showHiddenFiles='defaults write com.apple.finder AppleShowAllFiles YES'
# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Git
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
# Commit pending changes and quote all args as message
function gg() {
    git commit -v -a -m "$*"
}
alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias eg='mate .git/config'
#Git clone from GitHub
function gch() {
    git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() {
    git branch --track $2 $1/$2 && git checkout $2
}
# Quickly clobber a file and checkout
function grf() {
    rm $1
    git checkout $1
}
# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
    ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
    git remote add origin git@example.com:$1.git
    git push origin master
    git config branch.master.remote origin
    git config branch.master.merge refs/heads/master
    git config push.default current
}

# export diff

alias expdiff='git diff master > ~/diff/diff.diff'
alias txtdiff='git diff master > ~/diff/diff.txt'

# common
alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
# -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir
function take() {
    mkdir -p "$1"
    cd "$1"
}

alias e='exit'
alias k9="killall -9"
function killnamed () {
    ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill
}
function zipr() {
    zip -r $1.zip $1
}

function copy() {
    cat $1 | xclip -selection clipboard
}

function copyFromBottomByLine() {
   tail -n $1 $2 | copy

}

function paste() {
   xclip -selection clipboard -o > $1
}




# Text editing
# Emacs
alias em="open -a Emacs"
alias emm="open -a Emacs ."
# Regenerate TAGS file from file arguments
function ct() {
    rm -f TAGS
    etags --append --output=TAGS $*
}

#spacemacs
alias spacemacs="HOME=~/spacemacs emacs"

#Pandoc
#takes a file called config.org and produces a html conversion.
alias bootstrap='pandoc config.org -o out.html --template mytemplate.html --css ~/pandoc-test/bootstrap/bootstrap.css --self-contained --toc --toc-depth 2'

# Wifi
alias woff='networksetup -setairportpower en0 off'
alias won='networksetup -setairportpower en0 on'
alias wonf='woff; won'
alias lsw='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport scan' # list available networks

alias jw='networksetup -setairportnetwork en0 WIFI_SSID_I_WANT_TO_JOIN WIFI_PASSWORD' # join network
alias iname='networksetup -listallhardwareports' # Find network interface name

# Game aliases

# Heroes of might and magic 3. Horn of Abyss

alias hoa='wine ~/Desktop/Heroes\ of\ Might\ and\ Magic\ 3\ Complete/HotA_launcher.exe'

# Android

# copy files from device in camera into Downloads

function androidPull() {
    adb pull /sdcard/DCIM/Camera/"$1" ~/Downloads
}

# copy files - specify location within sd card
function androidCp() {
    adb pull /sdcard/Downloads/"$1" ~/Downloads
}

# Screen Shots

alias lss='ls ~/Dropbox/Screenshots/'
function mScreenshot(){
    mv ~/Dropbox/Screenshots/Screenshot/"$1" ~/notes/kcl/Year2/FC2/images/"$2"
}

# youtube-dl
function music-dl() {
    youtube-dl --extract-audio --audio-format mp3 "$1"
}


# command line fuzzy finder

#alias fzf ='find * -type f | fzf > selected'


# FASD aliases

alias a='fasd -a'        # any
alias s='fasd -si'       # show / search / select
alias d='fasd -d'        # directory
alias f='fasd -f'        # file
alias sd='fasd -sid'     # interactive directory selection
alias sf='fasd -sif'     # interactive file selection
alias z='fasd_cd -d'     # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection

#eval '$(fasd --init auto)'


alias dirsize='du -h --max-depth=1 | sort -hr' #size of dir  + breakdown
alias se='rg --files | fzf' # find file with grep + fzf
alias sev='vim $(rg --files | fzf)' # find file with grep + fzf and open with vim

#Paxport
alias cmanager='java -jar ~/utility/ConfigManagerGUI_all.jar'

